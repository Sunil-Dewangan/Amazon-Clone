{"ast":null,"code":"export const intialState = {\n  basket: [],\n  user: null\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"Add_to_Basket\":\n      /*logic for add items to basket*/\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"Remove_from_Basket\":\n      /*logic for removing items from basket*/\n      let newBasket = [...state.basket];\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n\n      if (index >= 0) {\n        //item exist in basket, remove it\n        newBasket.splice(index, 1);\n      } else {\n        console.warn('cannot remove product (id: ${action.id}) as it is not in basket');\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/React/Practice/NPM React/Amazon-clone/amazon-clone/src/reducer.js"],"names":["intialState","basket","user","reducer","state","action","console","log","type","item","newBasket","index","findIndex","basketItem","id","splice","warn"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG;AACvBC,EAAAA,MAAM,EAAE,EADe;AAEvBC,EAAAA,IAAI,EAAE;AAFiB,CAApB;;AAKP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAK,eAAL;AACA;AACI,aAAO,EACH,GAAGJ,KADA;AAEHH,QAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAkBI,MAAM,CAACI,IAAzB;AAFL,OAAP;;AAKJ,SAAK,oBAAL;AACA;AACI,UAAIC,SAAS,GAAG,CAAC,GAAGN,KAAK,CAACH,MAAV,CAAhB;AACA,YAAMU,KAAK,GAAGP,KAAK,CAACH,MAAN,CAAaW,SAAb,CAAwBC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBT,MAAM,CAACS,EAAhE,CAAd;;AAEA,UAAIH,KAAK,IAAE,CAAX,EAAc;AACV;AACAD,QAAAA,SAAS,CAACK,MAAV,CAAiBJ,KAAjB,EAAwB,CAAxB;AAEH,OAJD,MAIO;AACHL,QAAAA,OAAO,CAACU,IAAR,CACI,iEADJ;AAGH;;AAED,aAAO,EACH,GAAGZ,KADA;AAEHH,QAAAA,MAAM,EAAES;AAFL,OAAP;;AAKJ;AACI,aAAON,KAAP;AA7BR;AA+BH,CAjCD;;AAmCA,eAAeD,OAAf","sourcesContent":["export const intialState = {\r\n    basket: [],\r\n    user: null,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case \"Add_to_Basket\" :\r\n        /*logic for add items to basket*/\r\n            return {                \r\n                ...state,\r\n                basket: [...state.basket, action.item],               \r\n            };\r\n           \r\n        case \"Remove_from_Basket\" :\r\n        /*logic for removing items from basket*/\r\n            let newBasket = [...state.basket];\r\n            const index = state.basket.findIndex((basketItem) => basketItem.id === action.id);\r\n\r\n            if (index>=0) {\r\n                //item exist in basket, remove it\r\n                newBasket.splice(index, 1);\r\n                \r\n            } else {\r\n                console.warn(\r\n                    'cannot remove product (id: ${action.id}) as it is not in basket'\r\n                )\r\n            }\r\n        \r\n            return {\r\n                ...state,\r\n                basket: newBasket,\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}